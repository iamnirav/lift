name: PR Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  deploy-preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
        env:
          BASE_PATH: ''
          
      - name: Install Surge
        run: npm install -g surge
        
      - name: Deploy to Surge
        run: |
          export DEPLOY_DOMAIN="lift-pr-${{ github.event.number }}.surge.sh"
          surge --project ./docs --domain $DEPLOY_DOMAIN --token ${{ secrets.SURGE_TOKEN }}
          echo "DEPLOY_URL=https://$DEPLOY_DOMAIN" >> $GITHUB_ENV
        
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('Preview deployment')
            );
            
            const body = `üöÄ **Preview deployment ready!**
            
            üì± **Preview URL:** ${{ env.DEPLOY_URL }}
            
            Built from commit: ${context.sha.slice(0, 7)}
            
            This preview will be updated automatically when you push new commits to this PR.`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

  cleanup-preview:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    
    steps:
      - name: Install Surge
        run: npm install -g surge
        
      - name: Remove deployment
        run: |
          export DEPLOY_DOMAIN="lift-pr-${{ github.event.number }}.surge.sh"
          surge teardown $DEPLOY_DOMAIN --token ${{ secrets.SURGE_TOKEN }}
        continue-on-error: true
        
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'üóëÔ∏è Preview deployment has been cleaned up.'
            });